{"version":3,"sources":["screen.js","Lib.js","cmfLib.js","game/ModalTx.js","game/Farm.js","game/Home.js","App.js","serviceWorker.js","index.js"],"names":["ww","Dimensions","get","width","hh","height","scr","vp","vps","s","Math","floor","landscape","msg","a","Toastify","backgroundColor","gravity","position","text","showToast","ms","Promise","resolve","reject","setTimeout","key","val","window","localStorage","getItem","setItem","clear","RO_PROVIDER","RO_WALLET","RO_TOKEN","RO_TOKENFARM","RO_COINFARM","RO_ROUTER","PROVIDER","SIGNER","TOKEN","TOKENFARM","COINFARM","delay","openUrl","url","open","focus","openUrlHere","getStorageValue","setStorageValue","clearStorageValue","remainingText","seconds","secs","numDays","numHours","numMinute","ret","to4dec","amount","round","Number","to2dec","log","require","ethers","maxUINT","BigNumber","constants","MaxUint256","IERC20_ABI","abi","TOKEN_ADDRESS","TOKENFARM_ABI","TOKENFARM_ADDRESS","ROUTER_ABI","ROUTER_ADDRESS","COINFARM_ABI","COINFARM_ADDRESS","wei2eth","wei","utils","formatUnits","eth2wei","eth","parseEther","tmp","Wallet","createRandom","pk","privateKey","providers","JsonRpcProvider","Contract","ethereum","Error","on","_chainId","location","reload","request","method","chainId","connected","isConnected","enable","Web3Provider","getSigner","getAddress","userAddress","router","amountIn","WETH","WETH_ADDRESS","path","getAmountsOut","result","price","calcAprTokenFarm","aprTF","calcAprCoinFarm","aprCF","tokenPrice","aprTokenFarm","aprCoinFarm","debug","tokenFarm","getData","data","iMax","toNumber","iMin","totRPS","from","i","getRewardHistoryData","hd","minTs","maxTs","add","delta","rewardDaily","mul","div","pctgDaily","apr","coinFarm","rewardDailyToken","token2eth","balanceOf","userToken","getBalance","userETH","provider","getBlock","block","ts","timestamp","token","owned","allowance","approved","getUserData","ud","staked","pendingWithdraw","unstakeTimestamp","withdrawTimestamp","getUnclaimedReward","reward","nextUpdateTime","claimTimestamp","ADDRESS_WALLET","tokenFarmWallet","tokenFarmWalletToken","extraData","approve","tx","wait","hash","stakeToken","unstakeToken","claimReward","withdrawToken","updateTurn","amountWei","coinFarmWallet","coinFarmWalletToken","stakeCoin","value","unstakeCoin","withdrawCoin","EURL","loadRandomWallet","detectMetamask","loadMetamask","getGlobalData","cmfFarmGlobalData","cmfFarmUserData","cmfFarmApprove","cmfFarmStake","cmfFarmUnstake","cmfFarmClaim","cmfFarmWithdraw","cmfFarmUpdate","cfxFarmGlobalData","cfxFarmUserData","cfxFarmStake","cfxFarmUnstake","cfxFarmClaim","cfxFarmWithdraw","screen","View","ModalTx","props","state","indicator","ActivityIndicator","color","size","btnClose","type","title","onPress","onClose","this","txHash","Lib","cmfLib","txError","Text","style","textAlign","isVisible","modalVisible","onBackdropPress","alignItems","justifyContent","padding","flex","React","Component","Farm","setState","busy","amountInput","refreshData","prevProps","config","globalDataFunc","userDataFunc","gd","onRefreshData","error","approveFunc","modalTxVisible","errMsg","message","stakeFunc","updateFunc","claimFunc","unstakeFunc","withdrawFunc","rewardToken","isCFX","cfx","s2","textTransform","moment","unix","apy","dailyPctg","unstakeTs","claimTs","withdrawTs","pow","unstakeTimeWarning","enableStake","enableUnstake","enableClaim","enableWithdraw","msgReward","unstakeTime","format","claimTime","withdrawTime","needApprove","btnApprove","btnClaimReward","description","paddingBottom","doApprove","disabled","doClaim","doWithdraw","sPanel","borderWidth","borderColor","btnBack","paddingTop","onBack","busyIndicator","inputBoxRight","onFullStake","onFullUnstake","clickStake","doStake","clickUnstake","doUnstake","owned1000","staked1000","paddingVertical","fontWeight","fontSize","flexDirection","TextInput","onChangeText","txt","keyboardType","placeholder","textStyle1","textStyle1b","buttonStyle","titleStyle","Home","disclaimerAgree","connectMetamask","showMetamaskError","showDisclaimer","show","globalData","userData","nextPage","disclaimerHide","CheckBox","onValueChange","ok","modalConnectVisible","btnConn","swapSellPrice","btnWidth","btnConnWidth","walletAddress","balanceToken","balanceETH","walletContent","paddingHorizontal","desc","name","disable","btn","cb","dpc","toUpperCase","renderFarm","ScrollView","maxWidth","renderDisclaimer","middleContent","config2","mode","config1","warn","renderInfo","imgSz","Image","source","uri","renderPricePanel","renderUserPanel","contentLayout","renderModalConnect","renderModalWarn","borderBottomColor","borderBottomWidth","renderHeader","renderContent","borderTopColor","borderTopWidth","renderFooter","onLayout","e","nativeEvent","layout","TouchableOpacity","borderRightWidth","renderFarm1","renderFarm2","modalWarnVisible","setLevel","theme","colors","primary","App","w","h","minWidth","component","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.13fce6c5.chunk.js","sourcesContent":["import { View, Dimensions, ActivityIndicator, Text } from 'react-native';\n\nlet ww = Dimensions.get('window').width;\nlet hh = Dimensions.get('window').height;\n\nlet scr = ww;\nlet landscape = ww > hh;\nif (ww > hh) scr = hh;\n\nconst vp = scr / 100;\nconst vps = (s) => {\n  if (s >= 100) return scr;\n  return Math.floor(vp * s);\n}\n\nexport default {\n  vp,\n  vps,\n  landscape\n};\n\n","import Toastify from 'toastify-js';\nimport 'toastify-js/src/toastify.css';\n\nasync function showToast(msg) {\n  Toastify({\n    backgroundColor: 'black',\n    gravity: 'bottom', // `top` or `bottom`\n    position: 'center', // `left`, `center` or `right`\n    text: msg\n  }).showToast();\n}\n\nasync function delay(ms) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      resolve();\n    }, ms);\n  })\n}\n\n// async function getLogger() {\n//   return console;\n// }\n\nasync function getStorageValue(key) {\n  const val = window.localStorage.getItem(key);\n  return val;\n}\n\nasync function setStorageValue(key, val) {\n  window.localStorage.setItem(key, val);\n}\n\nasync function clearStorageValue() {\n  window.localStorage.clear();\n}\n\nfunction openUrlHere(url) {\n  const win = window.open(url, '_self');\n  win.focus();\n}\n\nfunction openUrl(url) {\n  const win = window.open(url, '_blank');\n  win.focus();\n}\n\nfunction remainingText(seconds) {\n  let secs = seconds;\n  let numDays = Math.floor(secs / (3600 * 24));\n  secs = secs - (numDays * 3600 * 24);\n  let numHours = Math.floor(secs / 3600);\n  secs = secs - (numHours * 3600);\n  let numMinute = Math.floor(secs / 60);\n  secs = secs - (numMinute * 60);\n  let numSeconds = secs;\n  let ret = '';\n  if (numDays > 0) ret += (numDays + 'd ');\n  if (numHours > 0) ret += (numHours + 'h ');\n  if (numMinute > 0) ret += (numMinute + 'm ');\n  if (numSeconds > 0) ret += (numSeconds + 's');\n  return ret;\n}\n\nfunction to4dec(amount) {\n  return (Math.round(Number(amount) * 10000) / 10000);\n}\n\nfunction to2dec(amount) {\n  return (Math.round(Number(amount) * 100) / 100);\n}\n\nexport default {\n  delay,\n  openUrl,\n  openUrlHere,\n  showToast,\n  getStorageValue,\n  setStorageValue,\n  clearStorageValue,\n  remainingText,\n  to4dec,\n  to2dec\n};\n\n","const axios = require('axios');\nconst log = require('loglevel');\nconst ethers = require(\"ethers\").ethers;\nconst BigNumber = ethers.BigNumber;\nconst moment = require('moment');\n\nconst maxUINT = ethers.constants.MaxUint256;\nconst ZERO18 = '000000000000000000';\nconst ZERO6 = '000000';\nconst PROVIDER_URL = 'https://evm.confluxrpc.com';\nconst CHAIN_ID = 1030;\nconst EURL = 'https://evm.confluxscan.io';\n\nconst IERC20_ABI = require('./json/IERC20.json').abi;\nconst TOKEN_ADDRESS = '0x9C34ea2cBde848f82793B9bAE2fE534A97fA0769';\n\nconst TOKENFARM_ABI = require('./json/ZTokenFarm.sol/ZTokenFarm.json').abi;\nconst TOKENFARM_ADDRESS = '0xFabA0c33F2D98659d4fA55eeC2715C3d5a7e6Aa7';\n\nconst ROUTER_ABI = require('./json/uniswapv2router02abi.json');\nconst ROUTER_ADDRESS = '0x62b0873055bf896dd869e172119871ac24aea305';\n\nconst COINFARM_ABI = require('./json/ZFarmV3.sol/ZFarmV3.json').abi;\nconst COINFARM_ADDRESS = '0xd4182B3486B055A54323033B0649f8906CDe84D6';\n\nlet RO_PROVIDER;\nlet RO_WALLET;\nlet RO_TOKEN;\nlet RO_TOKENFARM;\nlet RO_COINFARM;\nlet RO_ROUTER;\n\nlet PROVIDER;\nlet SIGNER;\nlet TOKEN;\nlet TOKENFARM;\nlet COINFARM;\nlet ROUTER;\n\nlet aprFarm1 = false;\nlet aprFarm2 = false;\n\nfunction wei2eth(wei) {\n  return ethers.utils.formatUnits(wei, \"ether\");\n}\n\nfunction eth2wei(eth) {\n  return ethers.utils.parseEther(eth);\n}\n\nasync function loadRandomWallet() {\n  const tmp = ethers.Wallet.createRandom();\n  const pk = tmp.privateKey;\n  RO_PROVIDER = new ethers.providers.JsonRpcProvider(PROVIDER_URL);\n  RO_WALLET = new ethers.Wallet(pk, RO_PROVIDER);\n  RO_TOKEN = new ethers.Contract(TOKEN_ADDRESS, IERC20_ABI, RO_WALLET);\n  RO_TOKENFARM = new ethers.Contract(TOKENFARM_ADDRESS, TOKENFARM_ABI, RO_WALLET);\n  RO_COINFARM = new ethers.Contract(COINFARM_ADDRESS, COINFARM_ABI, RO_WALLET);\n  RO_ROUTER = new ethers.Contract(ROUTER_ADDRESS, ROUTER_ABI, RO_WALLET);\n\n}\n\nasync function detectMetamask() {\n  if (!window.ethereum) throw new Error('Please install Metamask and reload!');\n  window.ethereum.on('chainChanged', (_chainId) => window.location.reload());\n  let chainId = await window.ethereum.request({ method: 'eth_chainId' });\n  chainId = Number(chainId);\n  if (chainId !== CHAIN_ID) throw new Error('Please connect metamask to right network!');\n  let connected = window.ethereum.isConnected();\n  return connected;\n}\n\nasync function loadMetamask() {\n  window.ethereum.enable();\n  PROVIDER = new ethers.providers.Web3Provider(window.ethereum);\n  SIGNER = PROVIDER.getSigner();\n  TOKEN = new ethers.Contract(TOKEN_ADDRESS, IERC20_ABI, SIGNER);\n  TOKENFARM = new ethers.Contract(TOKENFARM_ADDRESS, TOKENFARM_ABI, SIGNER);\n  COINFARM = new ethers.Contract(COINFARM_ADDRESS, COINFARM_ABI, SIGNER);\n  ROUTER = new ethers.Contract(ROUTER_ADDRESS, ROUTER_ABI, SIGNER);\n\n  const userAddress = await SIGNER.getAddress();\n  return userAddress;\n}\n\nasync function getGlobalData() {\n  const router = RO_ROUTER;\n  const tokenFarm = RO_TOKENFARM;\n\n  // token price\n  let amountIn = eth2wei('1');\n  const WETH_ADDRESS = await router.WETH();\n\n  let path = [\n    TOKEN_ADDRESS,\n    WETH_ADDRESS\n  ];\n\n  let result = await router.getAmountsOut(amountIn, path);\n  const price = result[1];\n\n  // apr token farm\n  const aprTF = await calcAprTokenFarm();\n  const aprCF = await calcAprCoinFarm();\n\n  const ret = {\n    tokenPrice: wei2eth(price),\n    aprTokenFarm: aprTF,\n    aprCoinFarm: aprCF\n  };\n  log.debug(ret);\n  return ret;\n}\n\nasync function calcAprTokenFarm() {\n  const tokenFarm = RO_TOKENFARM;\n\n  // apr token farm\n  const data = await tokenFarm.getData();\n  const iMax = data[0].toNumber();\n  let iMin = iMax - 2;\n  if (iMin < 0) iMin = 0;\n\n  let minTs;\n  let maxTs;\n  let totRPS = ethers.BigNumber.from('0');\n  for (let i = iMin; i < iMax; i++) {\n    const hd = await tokenFarm.getRewardHistoryData(i);\n    if (!minTs) {\n      minTs = hd[3].toNumber();\n    }\n    else {\n      maxTs = hd[3].toNumber();\n      totRPS = totRPS.add(hd[2]);\n    }\n  }\n  const delta = maxTs - minTs;\n  const rewardDaily = totRPS.mul('86400').div(delta + '');\n  const pctgDaily = Number(wei2eth(rewardDaily)) * 100;\n  const apr = Math.floor(pctgDaily * 365);\n  return apr;\n}\n\nasync function calcAprCoinFarm() {\n  const provider = RO_PROVIDER;\n  const coinFarm = RO_COINFARM;\n\n  // apr token farm\n  const data = await coinFarm.getData();\n  const iMax = data[0].toNumber();\n  const interestAvailable = data[1];\n  let iMin = iMax - 2;\n  if (iMin < 0) iMin = 0;\n  let minTs;\n  let maxTs;\n  let totRPS = ethers.BigNumber.from('0');\n  for (let i = iMin; i < iMax; i++) {\n    const hd = await coinFarm.getRewardHistoryData(i);\n    if (!minTs) {\n      minTs = hd[3].toNumber();\n    }\n    else {\n      maxTs = hd[3].toNumber();\n      totRPS = totRPS.add(hd[2]);\n    }\n  }\n  const delta = maxTs - minTs;\n  const rewardDailyToken = totRPS.mul('86400').div(delta + '');\n  const rewardDaily = await token2eth(rewardDailyToken);\n  const pctgDaily = Number(wei2eth(rewardDaily)) * 100;\n  const apr = Math.floor(pctgDaily * 365);\n\n  return apr;\n}\n\nasync function getUserData(userAddress) {\n  const userToken = await RO_TOKEN.balanceOf(userAddress);\n  const userETH = await RO_PROVIDER.getBalance(userAddress);\n  return {\n    userETH: wei2eth(userETH),\n    userToken: wei2eth(userToken)\n  };\n}\n\n// ******************************* CMF FARM *******************************\nasync function cmfFarmGlobalData() {\n  const provider = RO_PROVIDER;\n  const tokenFarm = RO_TOKENFARM;\n  const token = RO_TOKEN;\n\n  const block = await provider.getBlock();\n  const ts = block.timestamp;\n\n  // apr token farm\n  const apr = await calcAprTokenFarm();\n\n  return {\n    ts,\n    apr\n  };\n}\n\nasync function cmfFarmUserData(userAddress) {\n  const token = RO_TOKEN;\n  const tokenFarm = RO_TOKENFARM;\n\n  const owned = await token.balanceOf(userAddress);\n  const approved = await token.allowance(userAddress, TOKENFARM_ADDRESS);\n  const ud = await tokenFarm.getUserData(userAddress);\n  const staked = ud[1];\n  const pendingWithdraw = ud[4];\n  const unstakeTimestamp = ud[2].toNumber();\n  const withdrawTimestamp = ud[3].toNumber();\n\n  const reward = await tokenFarm.getUnclaimedReward(userAddress);\n  const claimTimestamp = (await tokenFarm.nextUpdateTime()).toNumber();\n\n  // debug only\n  const tokenFarmWallet = await tokenFarm.ADDRESS_WALLET();\n  const tokenFarmWalletToken = await token.balanceOf(tokenFarmWallet);\n  const extraData = {\n    tokenFarmWallet,\n    tokenFarmWalletToken: wei2eth(tokenFarmWalletToken)\n  }\n  log.debug('** tokenfarm **');\n  log.debug(extraData);\n\n  return {\n    owned: wei2eth(owned),\n    approved: wei2eth(approved),\n    staked: wei2eth(staked),\n    reward: wei2eth(reward),\n    pendingWithdraw: wei2eth(pendingWithdraw),\n    unstakeTimestamp,\n    claimTimestamp,\n    withdrawTimestamp\n  };\n}\n\nasync function cmfFarmApprove() {\n  const tx = await TOKEN.approve(TOKENFARM_ADDRESS, maxUINT);\n  await tx.wait();\n  return tx.hash;\n}\n\nasync function cmfFarmStake(amount) {\n  const tx = await TOKENFARM.stakeToken(eth2wei(amount));\n  await tx.wait();\n  return tx.hash;\n}\n\nasync function cmfFarmUnstake(amount) {\n  const tx = await TOKENFARM.unstakeToken(eth2wei(amount));\n  await tx.wait();\n  return tx.hash;\n}\n\nasync function cmfFarmClaim() {\n  const tx = await TOKENFARM.claimReward();\n  await tx.wait();\n  return tx.hash;\n}\n\nasync function cmfFarmWithdraw() {\n  const tx = await TOKENFARM.withdrawToken();\n  await tx.wait();\n  return tx.hash;\n}\n\nasync function cmfFarmUpdate() {\n  const tx = await TOKENFARM.updateTurn();\n  await tx.wait();\n  return tx.hash;\n}\n\n// ******************************* CFX FARM *******************************\nasync function cfxFarmGlobalData() {\n  const provider = RO_PROVIDER;\n  const coinFarm = RO_COINFARM;\n\n  const block = await provider.getBlock();\n  const ts = block.timestamp;\n\n  // apr token farm\n  // const data = await coinFarm.getData();\n  // const iMax = data[0].toNumber();\n  // const interestAvailable = data[1];\n  // let iMin = iMax - 7;\n  // if (iMin < 0) iMin = 0;\n  // let minTs;\n  // let maxTs;\n  // let totRPS = ethers.BigNumber.from('0');\n  // for (let i = iMin; i < iMax; i++) {\n  //   const hd = await coinFarm.getRewardHistoryData(i);\n  //   if (!minTs) {\n  //     minTs = hd[3].toNumber();\n  //   }\n  //   else {\n  //     maxTs = hd[3].toNumber();\n  //     totRPS = totRPS.add(hd[2]);\n  //   }\n  // }\n  // const delta = maxTs - minTs;\n  // const rewardDailyToken = totRPS.mul('86400').div(delta + '');\n  // const rewardDaily = await token2eth(rewardDailyToken);\n  // // rewardDaily converted to cfx\n  // const pctgDaily = Number(wei2eth(rewardDaily)) * 100;\n  const apr = await calcAprCoinFarm();\n\n  return {\n    ts,\n    apr\n  };\n}\n\nasync function token2eth(amountWei) {\n  const router = RO_ROUTER;\n  const WETH_ADDRESS = await router.WETH();\n\n  let path = [\n    TOKEN_ADDRESS,\n    WETH_ADDRESS\n  ];\n\n  let result = await router.getAmountsOut(amountWei, path);\n  return result[1];\n}\n\nasync function cfxFarmUserData(userAddress) {\n  const token = RO_TOKEN;\n  const coinFarm = RO_COINFARM;\n\n  const owned = await RO_PROVIDER.getBalance(userAddress);\n  const approved = owned;\n  const ud = await coinFarm.getUserData(userAddress);\n  const staked = ud[1];\n  const pendingWithdraw = ud[4];\n  const unstakeTimestamp = ud[2].toNumber();\n  const withdrawTimestamp = ud[3].toNumber();\n\n  const reward = await coinFarm.getUnclaimedReward(userAddress);\n  const claimTimestamp = (await coinFarm.nextUpdateTime()).toNumber();\n\n  // debug only\n  const coinFarmWallet = await coinFarm.ADDRESS_WALLET();\n  const coinFarmWalletToken = await token.balanceOf(coinFarmWallet);\n  const extraData = {\n    coinFarmWallet,\n    coinFarmWalletToken: wei2eth(coinFarmWalletToken)\n  }\n  // log.debug(extraData);\n\n  return {\n    owned: wei2eth(owned),\n    approved: wei2eth(approved),\n    staked: wei2eth(staked),\n    reward: wei2eth(reward),\n    pendingWithdraw: wei2eth(pendingWithdraw),\n    unstakeTimestamp,\n    claimTimestamp,\n    withdrawTimestamp\n  };\n}\n\nasync function cfxFarmStake(amount) {\n  const tx = await COINFARM.stakeCoin({ value: eth2wei(amount) });\n  await tx.wait();\n  return tx.hash;\n}\n\nasync function cfxFarmUnstake(amount) {\n  const tx = await COINFARM.unstakeCoin(eth2wei(amount));\n  await tx.wait();\n  return tx.hash;\n}\n\nasync function cfxFarmClaim() {\n  const tx = await COINFARM.claimReward();\n  await tx.wait();\n  return tx.hash;\n}\n\nasync function cfxFarmWithdraw() {\n  const tx = await COINFARM.withdrawCoin();\n  await tx.wait();\n  return tx.hash;\n}\n\nexport default {\n  EURL,\n  loadRandomWallet,\n  detectMetamask,\n  loadMetamask,\n  getGlobalData,\n  getUserData,\n\n  cmfFarmGlobalData,\n  cmfFarmUserData,\n  cmfFarmApprove,\n  cmfFarmStake,\n  cmfFarmUnstake,\n  cmfFarmClaim,\n  cmfFarmWithdraw,\n  cmfFarmUpdate,\n\n  cfxFarmGlobalData,\n  cfxFarmUserData,\n  cfxFarmStake,\n  cfxFarmUnstake,\n  cfxFarmClaim,\n  cfxFarmWithdraw,\n\n};\n\n","import React from 'react';\nimport { View, Text, ScrollView, ActivityIndicator, Image, TextInput, CheckBox } from 'react-native';\nimport { Button, ButtonGroup } from 'react-native-elements';\nimport screen from '../screen';\nimport Icon from 'react-native-vector-icons/FontAwesome';\nimport Lib from '../Lib';\nimport _ from 'lodash';\nimport moment from 'moment';\nimport Modal from 'modal-enhanced-react-native-web';\nimport log from 'loglevel';\nimport cmfLib from '../cmfLib';\nimport { TouchableOpacity } from 'react-native-web';\nimport Farm from './Farm';\n\nconst themeColor1 = '#AFD3E2';\nconst themeColor = 'darkblue';\nconst textColor1 = 'white';\nconst TOKEN = 'CMF';\nconst USDT = 'USDT';\nconst ETH = 'CFX';\nconst disclaimerKey = 'DISCLAIMER_CMF';\nconst appTitle = 'Conflux Moon Farmer';\nconst urlTrade = 'https://app.swappi.io/#/swap?inputCurrency=CFX&outputCurrency=0x2eB3a860Ddd8BC2B2621aA99168D414C14802c9f';\nconst urlAnalyze = 'https://dexscreener.com/conflux/0x87a340a3abb0c20ea047ff4c1a55b3356f850788';\nconst networkName = 'Conflux eSpace';\nconst chainlistURL = 'https://chainlist.org/chain/1030';\nconst disclaimerMsg = 'Warning: These project are not audited and are provided \"as is\" without any warranties. Use at your own risk. The developers of the project are not liable for any inaccuracies or errors in the information provided. Exercise caution and do your own research before using the project. Source code of the project is open source and can be verified on the blockchain explorer. By using the project, you acknowledge and agree that code is law, the developers take no responsibility and cannot be held liable for any claims, liabilities, hacks, expenses or damages.';\n\nconst vp = screen.vp;\nconst vps = screen.vps;\nconst landscape = screen.landscape;\nconst spc = <View style={{ width: vps(2), height: vps(2) }} />;\nconst textStyle1 = { textAlign: 'center', color: textColor1, textTransform: 'uppercase' };\nconst textStyle1b = { textAlign: 'center', color: textColor1, textTransform: 'uppercase', fontWeight: 'bold' };\nconst buttonStyle = { borderColor: 'white', borderWidth: 1 };\nconst titleStyle = { color: 'white' };\n\nfunction to4dec(amount) {\n  return (Math.round(Number(amount) * 10000) / 10000);\n}\n\nfunction to2dec(amount) {\n  return (Math.round(Number(amount) * 100) / 100);\n}\n\nclass ModalTx extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n    };\n  }\n\n  render() {\n    // <ModalTx modalVisible={this.state.modalTxVisible} txHash={this.state.txHash} txError={this.state.txError} onClose={()=>this.setState({modalTxVisible:false})} />\n    let indicator = <ActivityIndicator color='gray' size='large' />;\n    let msg = 'PROCESSING TX';\n    let btnClose = <Button type=\"outline\" title='CLOSE' onPress={() => this.props.onClose()} />;\n    if (this.props.txHash) {\n      msg = 'PROCESS TX DONE';\n      const txHash = this.props.txHash;\n      indicator = <Button type=\"outline\" title='OPEN ON EXPLORER' onPress={() => Lib.openUrl(cmfLib.EURL + '/tx/' + txHash)} />\n    } else if (this.props.txError) {\n      msg = 'PROCESS TX FAIL';\n      indicator = <Text style={{ textAlign: 'center', color: 'red' }}>{this.props.txError}</Text>\n    } else {\n      btnClose = null;\n    }\n\n    return (\n      <Modal\n        isVisible={this.props.modalVisible}\n        onBackdropPress={() => this.props.onClose()}\n      >\n        <View style={{ alignItems: 'center', justifyContent: 'center' }}>\n          <View style={{ backgroundColor: 'white', padding: 2 * vp, width: 300 }}>\n            <View style={{ flex: 1, alignItems: 'center', justifyContent: 'center' }}>\n              <Text> </Text>\n              <Text style={{ textAlign: 'center' }}>{msg}</Text>\n              <Text> </Text>\n            </View>\n            <View>\n              {indicator}\n              <View style={{ height: vp }} />\n              {btnClose}\n            </View>\n          </View>\n        </View>\n      </Modal>\n    );\n  }\n\n}\n\nexport default ModalTx;\n","import React from 'react';\nimport { View, Text, ScrollView, ActivityIndicator, Image, TextInput, CheckBox, FlatList } from 'react-native';\nimport { Button } from 'react-native-elements';\nimport screen from '../screen';\nimport Icon from 'react-native-vector-icons/FontAwesome';\nimport Lib from '../Lib';\nimport cmfLib from '../cmfLib';\nimport _ from 'lodash';\nimport moment from 'moment';\nimport Modal from 'modal-enhanced-react-native-web';\nimport log from 'loglevel';\nimport ModalTx from './ModalTx';\n\nconst vp = screen.vp;\nconst vps = screen.vps;\nconst landscape = screen.landscape;\nconst to4dec = Lib.to4dec;\nconst to2dec = Lib.to2dec;\n\nclass Farm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n    };\n  }\n\n  async componentDidMount() {\n    // this.interval = setInterval(() => {\n    //   this.setState({ ts: moment().unix() });\n    // }, 1000);\n    // const i = this.props.initial;\n    // if (i) {\n    //   this.setState({\n    //     gd: i.gd,\n    //     ud: i.ud\n    //   });\n    // } else {\n    //   await this.refreshData();\n    // }\n    this.setState({ busy: true, amountInput: '' });\n    await this.refreshData();\n    this.setState({ busy: false });\n  }\n\n  componentWillUnmount() {\n    // clearInterval(this.interval);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.userAddress !== this.props.userAddress) {\n      this.refreshData();\n    }\n  }\n\n  async refreshData() {\n    const { globalDataFunc, userDataFunc } = this.props.config;\n    try {\n      const userAddress = this.props.userAddress;\n      const gd = await globalDataFunc();\n      const ud = await userDataFunc(userAddress);\n      this.props.onRefreshData();\n      this.setState({ gd, ud });\n    } catch (err) {\n      log.error(err);\n    }\n  }\n\n  async doApprove() {\n    const { approveFunc } = this.props.config;\n    this.setState({ modalTxVisible: true, txHash: null, txError: null });\n    try {\n      const txHash = await approveFunc();\n      await this.refreshData();\n      this.setState({ txHash: txHash });\n    } catch (err) {\n      log.error(err);\n      const errMsg = err && err.data && err.data.message ? err.data.message : 'unknown error';\n      this.setState({ txError: errMsg });\n    }\n  }\n\n  async doStake(amount) {\n    const { stakeFunc } = this.props.config;\n    this.setState({ modalTxVisible: true, txHash: null, txError: null });\n    try {\n      const txHash = await stakeFunc(amount);\n      await this.refreshData();\n      this.setState({ txHash: txHash });\n    } catch (err) {\n      log.error(err);\n      const errMsg = err && err.data && err.data.message ? err.data.message : 'unknown error';\n      this.setState({ txError: errMsg });\n    }\n  }\n\n  async doUpdate() {\n    const { updateFunc } = this.props.config;\n    this.setState({ modalTxVisible: true, txHash: null, txError: null });\n    try {\n      const txHash = await updateFunc();\n      await this.refreshData();\n      this.setState({ txHash: txHash });\n    } catch (err) {\n      log.error(err);\n      const errMsg = err && err.data && err.data.message ? err.data.message : 'unknown error';\n      this.setState({ txError: errMsg });\n    }\n  }\n\n  async doClaim() {\n    const { claimFunc } = this.props.config;\n    this.setState({ modalTxVisible: true, txHash: null, txError: null });\n    try {\n      const txHash = await claimFunc();\n      await this.refreshData();\n      this.setState({ txHash: txHash });\n    } catch (err) {\n      log.error(err);\n      const errMsg = err && err.data && err.data.message ? err.data.message : 'unknown error';\n      this.setState({ txError: errMsg });\n    }\n  }\n\n  async doUnstake(amount) {\n    const { unstakeFunc } = this.props.config;\n    this.setState({ modalTxVisible: true, txHash: null, txError: null });\n    try {\n      const txHash = await unstakeFunc(amount);\n      await this.refreshData();\n      this.setState({ txHash: txHash });\n    } catch (err) {\n      log.error(err);\n      const errMsg = err && err.data && err.data.message ? err.data.message : 'unknown error';\n      this.setState({ txError: errMsg });\n    }\n  }\n\n  async doWithdraw() {\n    const { withdrawFunc } = this.props.config;\n    this.setState({ modalTxVisible: true, txHash: null, txError: null });\n    try {\n      const txHash = await withdrawFunc();\n      await this.refreshData();\n      this.setState({ txHash: txHash });\n    } catch (err) {\n      log.error(err);\n      const errMsg = err && err.data && err.data.message ? err.data.message : 'unknown error';\n      this.setState({ txError: errMsg });\n    }\n  }\n\n  render() {\n    const { stakeToken, rewardToken } = this.props.config;\n    const isCFX = this.props.cfx;\n\n    const userAddress = this.props.userAddress;\n    const gd = this.state.gd;\n    const ud = this.state.ud;\n    const connected = (gd && ud);\n\n    const s1 = { textAlign: 'center', fontWeight: 'bold', textTransform: 'uppercase', fontSize: 24 };\n    const s2 = { textAlign: 'center', textTransform: 'uppercase' };\n\n    let ts = moment().unix();\n    let apr = 0;\n    let apy = 0;\n    let dailyPctg = apr / 365;\n    let owned = '0.0';\n    let staked = '0.0';\n    let reward = '0.0';\n    let pendingWithdraw = '0.0';\n    let unstakeTs = moment().unix();\n    let claimTs = moment().unix();\n    let withdrawTs = moment().unix();\n    let approved = '0.0';\n\n    if (gd) {\n      ts = gd.ts;\n      apr = gd.apr;\n      dailyPctg = apr / 365;\n      apy = 100 * (Math.pow(1 + (dailyPctg / 100), 365) - 1);\n      apy = to2dec(apy);\n    }\n\n    if (ud) {\n      owned = ud.owned;\n      staked = ud.staked;\n      reward = ud.reward;\n      pendingWithdraw = ud.pendingWithdraw;\n      unstakeTs = ud.unstakeTimestamp;\n      claimTs = ud.claimTimestamp;\n      withdrawTs = ud.withdrawTimestamp;\n      approved = ud.approved;\n    }\n\n    const unstakeTime = moment.unix(unstakeTs).format('DD MMM HH:mm');\n    const claimTime = moment.unix(claimTs).format('DD MMM HH:mm');\n    const withdrawTime = moment.unix(withdrawTs).format('DD MMM HH:mm');\n    const needApprove = (Number(approved) < Number(owned));\n\n    let btnApprove = null;\n    let unstakeTimeWarning;\n    let btnClaimReward = null;\n    let enableStake = false;\n    let enableUnstake = false;\n    let enableClaim = false;\n    let enableWithdraw = false;\n    let title = 'Stake ' + stakeToken + ' earn ' + rewardToken;\n    let description = 'Avg. daily reward is ' + to2dec(dailyPctg) + '%';\n    let msgReward;\n    let btnUpdate = null;\n\n    enableClaim = (Number(reward) > 0);\n    enableStake = (Number(owned) > 0 && !enableClaim && !needApprove);\n    enableUnstake = (Number(staked) > 0 && ts > unstakeTs && !enableClaim);\n    enableWithdraw = (Number(pendingWithdraw) > 0 && ts > withdrawTs);\n\n    if (needApprove) {\n      btnApprove = <View style={{ paddingBottom: vps(1) }}><Button title={'Approve'} onPress={() => this.doApprove()} /></View>;\n    }\n\n    if (ts <= unstakeTs && Number(staked) > 0) {\n      unstakeTimeWarning = <Text>Unstake available after {unstakeTime}</Text>;\n    }\n\n    if (enableClaim)\n      msgReward = 'Reward ' + reward + ' ' + rewardToken;\n    else {\n      if (claimTs <= ts)\n        msgReward = 'Reward available soon..';\n      else\n        msgReward = 'Reward available after ' + claimTime;\n    }\n\n    btnClaimReward = <Button disabled={!enableClaim} title={'Claim Reward'} onPress={() => this.doClaim()} />;\n\n    if (Number(pendingWithdraw) > 0) {\n      if (enableWithdraw)\n        msgReward = 'Unstaked ' + pendingWithdraw + ' ' + stakeToken + '';\n      else\n        msgReward = 'Unstaked ' + pendingWithdraw + ' ' + stakeToken + '\\nWithdraw available after ' + withdrawTime;\n      btnClaimReward = <Button disabled={!enableWithdraw} title={'Withdraw'} onPress={() => this.doWithdraw()} />;\n    }\n\n    let sPanel = { borderWidth: 1, borderColor: 'gainsboro', backgroundColor: 'white', padding: vps(2) };\n    if (!landscape) sPanel.width = vps(90);\n\n    const btnBack = (\n      <View style={{ paddingTop: vps(1) }}>\n        <Button type='outline' title={'Back'} onPress={() => this.props.onBack()} />\n      </View>\n    );\n\n    let busyIndicator = null;\n    if (this.state.busy) {\n      busyIndicator = (\n        <View style={{ alignItems: 'center', justifyContent: 'center' }}>\n          <Text> </Text>\n          <ActivityIndicator />\n        </View>\n      );\n    }\n\n    let inputBoxRight = <Button disabled={true} title={stakeToken} />;\n    let onFullStake = () => this.setState({ amountInput: owned });\n    let onFullUnstake = () => this.setState({ amountInput: staked });\n    let clickStake = (amount) => this.doStake(amount);\n    let clickUnstake = (amount) => this.doUnstake(amount);\n    if (isCFX) {\n      inputBoxRight = <Button disabled={true} title={'x1000 CFX'} />;\n      const owned1000 = Math.floor(Number(owned) / 1000);\n      const staked1000 = Math.floor(Number(staked) / 1000);\n      onFullStake = () => this.setState({ amountInput: owned1000 });\n      onFullUnstake = () => this.setState({ amountInput: staked1000 });\n      clickStake = (amount) => this.doStake((Number(amount) * 1000) + '');\n      clickUnstake = (amount) => this.doUnstake((Number(amount) * 1000) + '');\n    }\n\n    return (\n      <View style={{\n        flex: 1, alignItems: 'center', justifyContent: 'center',\n        backgroundColor: 'white',\n        paddingVertical: vps(5)\n      }}>\n        <ModalTx modalVisible={this.state.modalTxVisible} txHash={this.state.txHash} txError={this.state.txError}\n          onClose={() => this.setState({ modalTxVisible: false })} />\n        <View style={sPanel}>\n          <Text> </Text>\n          <Text style={s2}>{title}</Text>\n          <Text style={s1}>{apy}% APY</Text>\n          <Text style={s2}>{description}</Text>\n          <Text> </Text>\n          {busyIndicator}\n          <Text> </Text>\n          <Text> </Text>\n          <Text>Owned {owned} {stakeToken}</Text>\n          <Text> </Text>\n          <View style={{ flexDirection: 'row' }}>\n            <View style={{ flex: 1 }}>\n              <TextInput\n                value={this.state.amountInput}\n                onChangeText={txt => this.setState({ amountInput: txt })}\n                keyboardType='numeric'\n                placeholder={'Amount stake/unstake'}\n                style={{ borderWidth: 1, padding: 5, flex: 1 }}\n              />\n            </View>\n            <View style={{ width: vp }} />\n            <View style={{ flexDirection: 'row', alignItems: 'center' }}>\n              {inputBoxRight}\n            </View>\n          </View>\n          <Text> </Text>\n          <Text>Staked {staked} {stakeToken}</Text>\n          {unstakeTimeWarning}\n          <Text> </Text>\n          {btnApprove}\n          <View style={{ flexDirection: 'row' }}>\n            <Button style={{}} type='outline' title='100%' onPress={\n              () => onFullStake()\n            } />\n            <View style={{ width: vp }} />\n            <View style={{ flex: 1 }}>\n              <Button disabled={!enableStake} title='Stake' onPress={\n                () => clickStake(this.state.amountInput)} />\n            </View>\n          </View>\n          <View style={{ height: vp }} />\n          <View style={{ flexDirection: 'row' }}>\n            <Button style={{}} type='outline' title='100%' onPress={\n              () => onFullUnstake()\n            } />\n            <View style={{ width: vp }} />\n            <View style={{ flex: 1 }}>\n              <Button disabled={!enableUnstake} title={'Unstake'} onPress={\n                () => clickUnstake(this.state.amountInput)} />\n            </View>\n          </View>\n          <Text> </Text>\n          <Text>{msgReward}</Text>\n          <Text> </Text>\n          {btnClaimReward}\n          {btnUpdate}\n          {btnBack}\n        </View>\n      </View>\n    );\n  }\n\n}\n\nexport default Farm;\n","import React from 'react';\nimport { View, Text, ScrollView, ActivityIndicator, Image, TextInput, CheckBox } from 'react-native';\nimport { Button, ButtonGroup } from 'react-native-elements';\nimport screen from '../screen';\nimport EvilIcon from 'react-native-vector-icons/EvilIcons';\nimport Icon from 'react-native-vector-icons/FontAwesome';\nimport Lib from '../Lib';\nimport _ from 'lodash';\nimport moment from 'moment';\nimport Modal from 'modal-enhanced-react-native-web';\nimport log from 'loglevel';\nimport cmfLib from '../cmfLib';\nimport { TouchableOpacity } from 'react-native-web';\nimport Farm from './Farm';\n\nconst themeColor = 'darkblue';\nconst textColor1 = 'white';\nconst TOKEN = 'CMF';\nconst USDT = 'USDT';\nconst ETH = 'CFX';\nconst disclaimerKey = 'DISCLAIMER_CMF';\nconst appTitle = 'Conflux Moon Farmer';\nconst urlTrade = 'https://app.swappi.io/#/swap?inputCurrency=CFX&outputCurrency=0x9c34ea2cbde848f82793b9bae2fe534a97fa0769';\nconst urlAnalyze = 'https://dexscreener.com/conflux/0x2939165ea836e282075c9022123ddcf9c7835386';\nconst networkName = 'Conflux eSpace';\nconst chainlistURL = 'https://chainlist.org/chain/1030';\nconst disclaimerMsg = 'Warning: These project are not audited and are provided \"as is\" without any warranties. Use at your own risk. The developers of the project are not liable for any inaccuracies or errors in the information provided. Exercise caution and do your own research before using the project. Source code of the project is open source and can be verified on the blockchain explorer. By using the project, you acknowledge and agree that code is law, the developers take no responsibility and cannot be held liable for any claims, liabilities, hacks, expenses or damages.';\nconst urlTG = 'https://t.me/dragoncultxyz';\nconst urlTwitter = 'https://twitter.com/dragoncultxyz';\n\nconst vp = screen.vp;\nconst vps = screen.vps;\nconst landscape = screen.landscape;\nconst spc = <View style={{ width: vps(2), height: vps(2) }} />;\nconst textStyle1 = { textAlign: 'center', color: textColor1, textTransform: 'uppercase' };\nconst textStyle1b = { textAlign: 'center', color: textColor1, textTransform: 'uppercase', fontWeight: 'bold' };\nconst buttonStyle = { borderColor: 'white', borderWidth: 1 };\nconst titleStyle = { color: 'white' };\n\nconst to4dec = Lib.to4dec;\nconst to2dec = Lib.to2dec;\n\nclass Home extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      disclaimerAgree: false,\n      connected: false\n    };\n  }\n\n  async componentDidMount() {\n    await this.connectMetamask();\n  }\n\n  componentWillUnmount() {\n  }\n\n  async connectMetamask() {\n    this.setState({ showMetamaskError: false });\n\n    const showDisclaimer = async () => {\n      const val = await Lib.getStorageValue(disclaimerKey);\n      if (val === 'yes')\n        this.setState({ connected: true, show: 'content' });\n      else if (val === 'no')\n        this.setState({ connected: true, show: 'disclaimer', disclaimerAgree: true });\n      else\n        this.setState({ connected: true, show: 'disclaimer' });\n    }\n\n    try {\n      await cmfLib.loadRandomWallet();\n      const globalData = await cmfLib.getGlobalData();\n      this.setState({ globalData });\n    } catch (err) {\n      log.error(err);\n    }\n\n    try {\n      const detected = await cmfLib.detectMetamask();\n      if (detected) {\n        const userAddress = await cmfLib.loadMetamask();\n        const userData = await cmfLib.getUserData(userAddress);\n        this.setState({ connected: true, userAddress, userData });\n\n        // try {\n        //   const gd = await cmfLib.cmfFarmGlobalData();\n        //   const ud = await cmfLib.cmfFarmUserData(userAddress);\n        //   this.setState({ initialTF: { gd, ud } });\n        // } catch (err) {\n        // }\n\n        // try {\n        //   const gd = await cmfLib.cfxFarmGlobalData();\n        //   const ud = await cmfLib.cfxFarmUserData(userAddress);\n        //   this.setState({ initialCF: { gd, ud } });\n        // } catch (err) {\n        //   log.error(err);\n        // }\n\n        return showDisclaimer();\n      }\n    } catch (err) {\n      log.error(err.message);\n    }\n\n    this.setState({ showMetamaskError: true, userAddress: false });\n\n    // await Lib.clearStorageValue();\n  }\n\n  async refreshData() {\n    try {\n\n      if (this.state.userAddress) {\n        const userData = await cmfLib.getUserData(this.state.userAddress);\n        this.setState({ userData });\n      }\n      const globalData = await cmfLib.getGlobalData();\n\n      this.setState({ globalData });\n    } catch (err) {\n      log.error(err.message);\n    }\n  }\n\n  renderDisclaimer() {\n    const msg = disclaimerMsg;\n    const nextPage = async () => {\n      const disclaimerHide = this.state.disclaimerHide;\n      const val = disclaimerHide ? 'yes' : 'no';\n      await Lib.setStorageValue(disclaimerKey, val);\n\n      this.setState({ show: 'content' });\n    };\n\n    return (\n      <View style={{ padding: 15 * vp, backgroundColor: themeColor, flex: 1, alignItems: 'flex-start', justifyContent: 'center' }}>\n        <Text style={{ color: 'white', fontWeight: 'bold' }}>Disclaimer</Text>\n        <Text style={{ color: 'white' }}>{msg}</Text>\n        <Text> </Text>\n        <View style={{ flexDirection: 'row', alignItems: 'center' }}>\n          <CheckBox color=\"gray\" style={{}} value={this.state.disclaimerAgree} onValueChange={ok => this.setState({ disclaimerAgree: ok })} />\n          <Text style={{ color: 'white' }}> I understand & agree</Text>\n        </View>\n        <Text> </Text>\n        <View style={{ flexDirection: 'row', alignItems: 'center' }}>\n          <CheckBox color=\"gray\" style={{}} value={this.state.disclaimerHide} onValueChange={ok => this.setState({ disclaimerHide: ok })} />\n          <Text style={{ color: 'white' }}> Dont show this page again</Text>\n        </View>\n        <Text> </Text>\n        <Button disabled={!(this.state.disclaimerAgree)} style={{}} buttonStyle={buttonStyle} titleStyle={titleStyle}\n          type='outline' title=\"Continue\" onPress={() => nextPage()} />\n        <Text> </Text>\n        <Text> </Text>\n      </View>\n    );\n  }\n\n  renderModalConnect() {\n    const width = vps(90) < 300 ? vps(90) : 300;\n    return (\n      <Modal\n        isVisible={this.state.modalConnectVisible}\n        onBackdropPress={() => this.setState({ modalConnectVisible: false })}\n      >\n        <View style={{ alignItems: 'center', justifyContent: 'center' }}>\n          <View style={{ backgroundColor: 'white', padding: vps(2), width }}>\n            <View style={{ flex: 1, padding: vp }}>\n              <Button type='outline' title='Install Metamask' onPress={() => Lib.openUrl('https://metamask.io')} />\n              <View style={{ height: vp }} />\n              <Button type='outline' title={'Switch network to ' + networkName} onPress={() => Lib.openUrl(chainlistURL)} />\n              <View style={{ height: vp }} />\n              <Button type='outline' title='Refresh page' onPress={() => window.location.reload()} />\n            </View>\n          </View>\n        </View>\n      </Modal>\n    );\n  }\n\n  renderPricePanel() {\n    const gd = this.state.globalData;\n    let swapSellPrice = (gd && gd.tokenPrice) ? gd.tokenPrice : '0.0';\n    let btnWidth = vps(40) < 150 ? vps(40) : 150;\n    let btnConnWidth = btnWidth * 2 + vp;\n    let btnConn;\n    if (this.state.showMetamaskError) {\n      btnConn = (\n        <View>\n          <View style={{ height: vp }} />\n          <View style={{ flexDirection: 'row', alignItems: 'center', justifyContent: 'center' }}>\n            <Button buttonStyle={buttonStyle} titleStyle={titleStyle} style={{ width: btnConnWidth }} type='outline' title='Connect' onPress={() => this.setState({ modalConnectVisible: true })} />\n          </View>\n        </View>\n      );\n    }\n    return (\n      <View style={{ flex: 1 }}>\n        <Text style={textStyle1}>{TOKEN} Price</Text>\n        <Text style={textStyle1b}>{swapSellPrice} {ETH}</Text>\n        <Text> </Text>\n        <View style={{ flexDirection: 'row', alignItems: 'center', justifyContent: 'center' }}>\n          <Button buttonStyle={buttonStyle} titleStyle={titleStyle} style={{ width: btnWidth }} type='outline' title='Trade' onPress={() => Lib.openUrl(urlTrade)} />\n          <View style={{ width: vp }} />\n          <Button buttonStyle={buttonStyle} titleStyle={titleStyle} style={{ width: btnWidth }} type='outline' title='Chart' onPress={() => Lib.openUrl(urlAnalyze)} />\n        </View>\n        {btnConn}\n        <Text> </Text>\n        <Text> </Text>\n      </View>\n    );\n  }\n\n  renderUserPanel() {\n    let walletAddress = 'WALLET NOT CONNECTED';\n    let balanceToken = '0.0';\n    let balanceETH = '0.0';\n\n    if (this.state.userAddress) {\n      const ud = this.state.userData;\n      walletAddress = this.state.userAddress;\n      balanceToken = ud.userToken;\n      balanceETH = ud.userETH;\n    }\n\n    const walletContent = balanceToken + ' ' + TOKEN + ' | ' + balanceETH + ' ' + ETH;\n\n    return (\n      <View style={{ flex: 1, alignItems: 'center', justifyContent: 'center', paddingHorizontal: vps(2) }}>\n        <Text> </Text>\n        <Text style={textStyle1}>{walletAddress}</Text>\n        <Text style={textStyle1}>{walletContent}</Text>\n        <Text> </Text>\n      </View>\n    );\n  }\n\n  renderFarm(data) {\n    return (\n\n      <View style={{ flex: 1 }}>\n        <View style={{ flex: 1, padding: vps(2) }}>\n          <View style={{ flex: 1, alignItems: 'center', justifyContent: 'center' }}>\n            <Text> </Text>\n            <View style={{ flex: 1 }}>\n              <Text style={{ textAlign: 'center' }}>\n                {data.desc}\n              </Text>\n            </View>\n            <Text> </Text>\n            <Icon name={'flask'} size={32} color=\"black\" />\n            <Text style={{ textAlign: 'center', fontWeight: 'bold', fontSize: 24 }}>{data.apy}</Text>\n            <Text style={{ textAlign: 'center', fontWeight: 'bold' }}>{'APY'}</Text>\n            <Text> </Text>\n            <Text> </Text>\n          </View>\n          <Button type='outline' disabled={data.disable} title={data.btn} onPress={() => data.cb()} />\n        </View>\n      </View>\n    );\n  }\n\n  renderFarm1() {\n    let disable = true;\n    let apy = <ActivityIndicator />;\n    const gd = this.state.globalData;\n    if (gd && gd.aprCoinFarm) {\n      const dpc = Number(gd.aprCoinFarm) / 365;\n      apy = Math.floor(100 * (Math.pow(1 + (dpc / 100), 365) - 1));\n      apy = apy + '%';\n      apy = apy.toUpperCase();\n      disable = false;\n    }\n    const desc = 'Stake CFX earn CMF';\n    const btn = 'START FARMING';\n    // const cb = () => this.setState({ warn: 'This feature still under construction. Launched soon.', modalWarnVisible: true });\n    const cb = () => this.setState({ show: 'farm1' });\n    return this.renderFarm({\n      desc,\n      apy,\n      btn,\n      cb,\n      disable\n    });\n  }\n\n  renderFarm2() {\n    let disable = true;\n    let apy = <ActivityIndicator />;\n    const gd = this.state.globalData;\n    if (gd && gd.aprTokenFarm) {\n      const dpc = Number(gd.aprTokenFarm) / 365;\n      apy = Math.floor(100 * (Math.pow(1 + (dpc / 100), 365) - 1));\n      apy = apy + '%';\n      apy = apy.toUpperCase();\n      disable = false;\n    }\n    const desc = 'Stake CMF earn CMF';\n    const btn = 'START FARMING';\n    const cb = () => this.setState({ show: 'farm2' });\n\n    return this.renderFarm({\n      desc,\n      apy,\n      btn,\n      cb,\n      disable\n    });\n  }\n\n  renderContent() {\n    if (this.state.show === 'disclaimer') {\n      return (\n        <ScrollView style={{ flex: 1, backgroundColor: themeColor }}>\n          <View style={{ flex: 1, alignItems: 'center', justifyContent: 'center' }}>\n            <View style={{ maxWidth: vps(100) }}>\n              {this.renderDisclaimer()}\n            </View>\n          </View>\n        </ScrollView>\n      );\n    }\n\n    const busyView = (\n      <View style={{ flex: 1, alignItems: 'center', justifyContent: 'center', backgroundColor: 'black' }}>\n        <ActivityIndicator color='white' size='large' />\n      </View>\n    );\n\n    // let middleContent = (\n    //   <View style={{ flex: 1, padding: vps(2) }}>\n    //     <View style={{ flexDirection: 'row' }}>\n    //       <View style={{ flex: 1 }}>{this.renderFarm1()}</View>\n    //       {spc}\n    //       <View style={{ flex: 1 }}>{this.renderFarm2()}</View>\n    //     </View>\n    //   </View>\n    // );\n\n    const config2 = {\n      mode: 'stakeTokenEarnToken',\n      stakeToken: 'CMF',\n      rewardToken: 'CMF',\n      globalDataFunc: cmfLib.cmfFarmGlobalData,\n      userDataFunc: cmfLib.cmfFarmUserData,\n      approveFunc: cmfLib.cmfFarmApprove,\n      stakeFunc: cmfLib.cmfFarmStake,\n      unstakeFunc: cmfLib.cmfFarmUnstake,\n      claimFunc: cmfLib.cmfFarmClaim,\n      withdrawFunc: cmfLib.cmfFarmWithdraw,\n    };\n\n    const config1 = {\n      mode: 'stakeCoinEarnToken',\n      stakeToken: 'CFX',\n      rewardToken: 'CMF',\n      globalDataFunc: cmfLib.cfxFarmGlobalData,\n      userDataFunc: cmfLib.cfxFarmUserData,\n      approveFunc: log.warn,\n      stakeFunc: cmfLib.cfxFarmStake,\n      unstakeFunc: cmfLib.cfxFarmUnstake,\n      claimFunc: cmfLib.cfxFarmClaim,\n      withdrawFunc: cmfLib.cfxFarmWithdraw,\n    };\n\n    // let middleContent = <Farm config={config1} userAddress={this.state.userAddress} onRefreshData={() => this.refreshData()} />;\n    let middleContent;\n\n    if (this.state.show === 'farm1') {\n      middleContent = <Farm\n        cfx={true}\n        // initial={this.state.initialCF}\n        config={config1}\n        userAddress={this.state.userAddress}\n        onRefreshData={() => this.refreshData()}\n        onBack={() => this.setState({ show: 'home' })}\n      />;\n    } else if (this.state.show === 'farm2') {\n      middleContent = <Farm\n        // initial={this.state.initialTF}\n        config={config2}\n        userAddress={this.state.userAddress}\n        onRefreshData={() => this.refreshData()}\n        onBack={() => this.setState({ show: 'home' })}\n      />;\n    } else {\n      middleContent = this.renderInfo();\n    }\n\n    const imgUrl = '/logo192.png';\n    const imgSz = 20 * vp;\n\n    return (\n      <ScrollView style={{ flex: 1, backgroundColor: 'white' }}>\n        <View style={{ alignItems: 'center', backgroundColor: themeColor }}>\n          <View style={{ maxWidth: vps(100), padding: vps(2), alignItems: 'center' }}>\n            <Text> </Text>\n            <Image\n              style={{ width: imgSz, height: imgSz }}\n              source={{ uri: imgUrl }}\n            />\n            <Text> </Text>\n            {this.renderPricePanel()}\n            <Text> </Text>\n            {this.renderUserPanel()}\n          </View>\n        </View>\n        <View style={{ flex: 1, alignItems: 'center', backgroundColor: 'white', paddingVertical: 0 }}>\n          <View style={{ width: vps(100), paddingHorizontal: 0 }}>\n            {middleContent}\n          </View>\n        </View>\n      </ScrollView >\n    );\n  }\n\n  renderFooter() {\n    if (this.state.connected) {\n      return (\n        <View style={{ flex: 1, alignItems: 'center', justifyContent: 'center' }}>\n          <Text style={{ textAlign: 'center', color: textColor1 }}>CONNECTED TO {networkName.toUpperCase()}</Text>\n        </View>\n      );\n    }\n\n    return (\n      <View style={{ flex: 1, alignItems: 'center', justifyContent: 'center' }}>\n        <Text style={{ textAlign: 'center', color: textColor1 }}>NOT CONNECTED TO {networkName.toUpperCase()}</Text>\n      </View>\n    );\n  }\n\n  renderHeader() {\n    return (\n      <View style={{ flex: 1, alignItems: 'center', justifyContent: 'center' }}>\n        <Text style={{ textAlign: 'center', color: textColor1 }}>{appTitle.toUpperCase()}</Text>\n      </View>\n    );\n  }\n\n  render() {\n    const contentLayout = this.state.contentLayout;\n    if (!contentLayout) {\n      return (\n        <View style={{ flex: 1 }}>\n          <View style={{}}>\n            <Text> </Text>\n            <Text> </Text>\n            <Text> </Text>\n          </View>\n          <View style={{ flex: 1 }} onLayout={e => {\n            const contentLayout = e.nativeEvent.layout;\n            this.setState({ contentLayout });\n          }}>\n            <ActivityIndicator color='gray' size='large' />\n          </View>\n          <View style={{}}>\n            <Text> </Text>\n            <Text> </Text>\n            <Text> </Text>\n          </View>\n        </View>\n      );\n    }\n\n    return (\n      <View style={{ flex: 1, backgroundColor: themeColor }}>\n        {this.renderModalConnect()}\n        {this.renderModalWarn()}\n        <View style={{ flex: 1, borderBottomColor: 'gainsboro', borderBottomWidth: 1 }}>\n          {this.renderHeader()}\n        </View>\n        <View style={{ width: contentLayout.width, height: contentLayout.height, backgroundColor: themeColor }} >\n          {this.renderContent()}\n        </View>\n        <View style={{ flex: 1, borderTopColor: 'gainsboro', borderTopWidth: 1 }}>\n          {this.renderFooter()}\n        </View>\n      </View>\n    );\n\n  }\n\n  renderInfo() {\n    const about = 'CMF is meme + farming token dedicated for CFX believers. As humble farmers in Conflux eSpace ecosystem we hope to reach the moon together. WAGMI!';\n    let ww = vps(40) < 150 ? vps(40) : 150;\n    ww = (2 * ww) + vp;\n\n    ww = vps(80);\n    return (\n      <View style={{ flex: 1, padding: vps(2) }}>\n        <Text> </Text>\n        <Text> </Text>\n        <View style={{ borderWidth: 1, borderColor: 'gainsboro' }}>\n          <View style={{\n            alignItems: 'center', justifyContent: 'center', borderBottomWidth: 1,\n            paddingVertical: vps(2), borderColor: 'gainsboro'\n          }}>\n            <View style={{ width: ww }}>\n              <Text> </Text>\n              <Text style={{ textAlign: 'center', fontWeight: 'bold', fontSize: 24 }}>ABOUT US</Text>\n              <Text style={{ textAlign: 'center' }}>{about}</Text>\n              <Text> </Text>\n            </View>\n          </View>\n          <View style={{ flexDirection: 'row' }}>\n            <TouchableOpacity style={{ flex: 1, borderRightWidth: 1, borderColor: 'gainsboro', alignItems: 'center', justifyContent: 'center' }}>\n              <EvilIcon name={'sc-telegram'} size={64} color=\"black\" onPress={() => Lib.openUrl(urlTG)} />\n            </TouchableOpacity>\n            <TouchableOpacity style={{ flex: 1, borderRightWidth: 1, borderColor: 'gainsboro', alignItems: 'center', justifyContent: 'center' }}>\n              <EvilIcon name={'sc-twitter'} size={64} color=\"black\" onPress={() => Lib.openUrl(urlTwitter)} />\n            </TouchableOpacity>\n            <TouchableOpacity style={{ flex: 1, alignItems: 'center', justifyContent: 'center' }}>\n              <EvilIcon name={'sc-github'} size={64} color=\"black\" />\n            </TouchableOpacity>\n          </View>\n          <View style={{ flexDirection: 'row', borderTopWidth: 1, borderColor: 'gainsboro' }}>\n            <View style={{ flex: 1, borderRightWidth: 1, borderColor: 'gainsboro' }}>\n              {this.renderFarm1()}\n            </View>\n            <View style={{ flex: 1 }}>\n              {this.renderFarm2()}\n            </View>\n          </View>\n\n        </View>\n        <Text> </Text>\n        <Text> </Text>\n\n      </View>\n    );\n  }\n\n  renderModalWarn() {\n    const width = vps(90) < 300 ? vps(90) : 300;\n    const msg = this.state.warn ? this.state.warn : ' ';\n    return (\n      <Modal\n        isVisible={this.state.modalWarnVisible}\n        onBackdropPress={() => this.setState({ modalWarnVisible: false })}\n      >\n        <View style={{ alignItems: 'center', justifyContent: 'center' }}>\n          <View style={{ backgroundColor: 'white', padding: vps(2), width }}>\n            <View style={{ flex: 1, padding: vps(2), alignItems: 'center', justifyContent: 'center' }}>\n              <Text style={{ textAlign: 'center' }}>{msg}</Text>\n            </View>\n            <View style={{ flex: 1, padding: vp }}>\n              <Button type='outline' title='Close' onPress={() => this.setState({ modalWarnVisible: false })} />\n            </View>\n          </View>\n        </View>\n      </Modal>\n    );\n  }\n\n}\n\nexport default Home;\n","import React from 'react';\nimport { View, Dimensions } from 'react-native';\nimport { ThemeProvider, Button } from 'react-native-elements';\n// import Landing from './game/Landing';\nimport Home from './game/Home';\nimport {\n  MemoryRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\nimport log from 'loglevel';\n\nlog.setLevel('error');\n\nconst theme = {\n  colors: {\n    primary: 'darkblue'\n  }\n};\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      show: 'busy',\n      landscape: false,\n      w: Dimensions.get('window').width\n    };\n  }\n\n  componentDidMount() {\n  }\n\n  componentWillMount() {\n  }\n\n  render() {\n    let ww = Dimensions.get('window').width;\n    let wh = Dimensions.get('window').height;\n    let w = ww - 20;\n    let h = wh;\n\n    return (\n      <>\n        <style type=\"text/css\">{`\n          @font-face {\n            font-family: 'FontAwesome';\n            src: url(${require('react-native-vector-icons/Fonts/FontAwesome.ttf')}) format('truetype');\n          }\n          @font-face {\n            font-family: 'EvilIcons';\n            src: url(${require('react-native-vector-icons/Fonts/EvilIcons.ttf')}) format('truetype');\n          }\n        `}</style>\n\n        <View style={{ minWidth: w, height: h }}>\n          <ThemeProvider theme={theme}>\n\n            <Router>\n              <Switch>\n                <Route path=\"/\" component={Home} />\n              </Switch>\n            </Router>\n          </ThemeProvider>\n        </View>\n      </>\n    );\n  }\n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}